#!/usr/bin/env python

import os
import subprocess
import argparse


def find_fastq_pairs(directory):
    """Find pairs of _R1.fastq and _R2.fastq files in the given directory."""
    fastq_files = [f for f in os.listdir(directory) if f.endswith(".fastq")]
    pairs = []
    for file in fastq_files:
        if "_R1.fastq" in file:
            mate = file.replace("_R1.fastq", "_R2.fastq")
            if mate in fastq_files:
                pairs.append((file, mate))
    return pairs


def run_trim_galore(input_dir, output_dir, pair):
    """Run trim_galore on the given pair of files."""
    r1_file, r2_file = pair
    cmd = [
        "trim_galore",
        "--paired",
        os.path.join(input_dir, r1_file),
        os.path.join(input_dir, r2_file),
        "-a",
        "GGCTGACTGACT",
        "-o",
        output_dir,
        "-j",
        "4",
    ]
    return subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)


def rename_output_files(output_dir, pair):
    """Rename the output files generated by trim_galore."""
    r1_old = os.path.join(output_dir, pair[0].replace("_R1.fastq", "_R1_val_1.fq"))
    r1_new = os.path.join(output_dir, pair[0])
    if not os.path.isfile(r1_old):
        print(
            f"ERROR: {r1_old} does not exist. This is not expected and should be investigated."
        )
    else:
        os.rename(r1_old, r1_new)

    r2_old = os.path.join(output_dir, pair[1].replace("_R2.fastq", "_R2_val_2.fq"))
    r2_new = os.path.join(output_dir, pair[1])
    if not os.path.isfile(r2_old):
        print(
            f"ERROR: {r2_old} does not exist. This is not expected and should be investigated."
        )
    else:
        os.rename(r2_old, r2_new)


def process_directory(input_dir, output_dir):
    pairs = find_fastq_pairs(input_dir)
    processes = []
    for pair in pairs:
        proc = run_trim_galore(input_dir, output_dir, pair)
        processes.append((proc, pair))

    for proc, pair in processes:
        proc.wait()  # Wait for the process to complete
    for proc, pair in processes:
        rename_output_files(output_dir, pair)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Process and rename FASTQ files using trim_galore."
    )
    parser.add_argument(
        "-i", "--input_dir", type=str, help="Input directory containing FASTQ files"
    )
    parser.add_argument(
        "-o", "--output_dir", type=str, help="Output directory for processed files"
    )
    args = parser.parse_args()

    process_directory(args.input_dir, args.output_dir)
